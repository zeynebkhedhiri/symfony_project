security:
    # Password hashers configuration
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User providers
    providers:
        users_in_memory: { memory: null }

        app_user_provider:
            entity:
                class: reservation_app\Entity\newUser
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider



            # Use the app_user_provider
            # Switch newUser configuration (if you need impersonation)
            # switch_user: true
            # Form login or other authentication mechanisms go here (e.g. form_login, json_login, etc.)
            # form_login:
            #     login_path: login
            #     check_path: login_check
            json_login:
                check_path: /login  # The endpoint to receive the token
                username_path: email
                password_path: password

    access_control:
        # Admin pages: only users with ROLE_ADMIN can access URLs starting with /admin
        - { path: ^/admin, roles: ROLE_ADMIN }
        # User pages: only users with ROLE_USER can access URLs starting with /newUser
        - { path: ^/newUser, roles: ROLE_USER }


